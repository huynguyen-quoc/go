// Code generated by mockery v2.2.1. DO NOT EDIT.

package kafkawriter

import (
	kafka "github.com/huynguyen-quoc/go/streams/kafka"
	mock "github.com/stretchr/testify/mock"
)

// MockClient is an autogenerated mock type for the Client type
type MockClient struct {
	mock.Mock
}

// Done provides a mock function with given fields:
func (_m *MockClient) Done() <-chan struct{} {
	ret := _m.Called()

	var r0 <-chan struct{}
	if rf, ok := ret.Get(0).(func() <-chan struct{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan struct{})
		}
	}

	return r0
}

// Save provides a mock function with given fields: entity
func (_m *MockClient) Save(entity kafka.Entity) error {
	ret := _m.Called(entity)

	var r0 error
	if rf, ok := ret.Get(0).(func(kafka.Entity) error); ok {
		r0 = rf(entity)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveBytesToStream provides a mock function with given fields: partitionBytes, dataBytes
func (_m *MockClient) SaveBytesToStream(partitionBytes []byte, dataBytes []byte) error {
	ret := _m.Called(partitionBytes, dataBytes)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, []byte) error); ok {
		r0 = rf(partitionBytes, dataBytes)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Shutdown provides a mock function with given fields:
func (_m *MockClient) Shutdown() {
	_m.Called()
}
