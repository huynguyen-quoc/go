// Code generated by mockery v2.2.1. DO NOT EDIT.

package kafka

import (
	core "github.com/huynguyen-quoc/go/streams/core"
	common "github.com/huynguyen-quoc/go/streams/schema/common"

	mock "github.com/stretchr/testify/mock"
)

// MockEntity is an autogenerated mock type for the Entity type
type MockEntity struct {
	mock.Mock
}

// FromPB provides a mock function with given fields: pb
func (_m *MockEntity) FromPB(pb core.Message) Entity {
	ret := _m.Called(pb)

	var r0 Entity
	if rf, ok := ret.Get(0).(func(core.Message) Entity); ok {
		r0 = rf(pb)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Entity)
		}
	}

	return r0
}

// GetMessage provides a mock function with given fields:
func (_m *MockEntity) GetMessage() core.Message {
	ret := _m.Called()

	var r0 core.Message
	if rf, ok := ret.Get(0).(func() core.Message); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.Message)
		}
	}

	return r0
}

// GetPartitionID provides a mock function with given fields: id
func (_m *MockEntity) GetPartitionID(id interface{}) int64 {
	ret := _m.Called(id)

	var r0 int64
	if rf, ok := ret.Get(0).(func(interface{}) int64); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// GetPartitionKey provides a mock function with given fields:
func (_m *MockEntity) GetPartitionKey() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetStreamInfo provides a mock function with given fields:
func (_m *MockEntity) GetStreamInfo() common.StreamInfoEntity {
	ret := _m.Called()

	var r0 common.StreamInfoEntity
	if rf, ok := ret.Get(0).(func() common.StreamInfoEntity); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(common.StreamInfoEntity)
	}

	return r0
}

// ToProtoBuf provides a mock function with given fields: isUpdate
func (_m *MockEntity) ToProtoBuf(isUpdate bool) core.Message {
	ret := _m.Called(isUpdate)

	var r0 core.Message
	if rf, ok := ret.Get(0).(func(bool) core.Message); ok {
		r0 = rf(isUpdate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.Message)
		}
	}

	return r0
}
